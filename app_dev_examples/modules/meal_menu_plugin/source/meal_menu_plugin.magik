#% text_encoding = iso8859_1
# ************************************************************ 
#							       
# (c) 2005-2006 General Electric Company. All Rights Reserved. 
#							       
# ************************************************************ 
_package user
_pragma(classify_level=restricted, topic={apps_dev_course})
##
## This is a simple plugin to activate a dialog box 
## based on class model.
##
# Define the plugin class
def_slotted_exemplar( :meal_menu_plugin,
{},
:plugin )
$
# Create an action
_pragma(classify_level=debug, topic={application_development_examples})
_method meal_menu_plugin.init_actions()
    ## Create the actions defined by the plugin
    _self.add_action(
	sw_action.new( :activate_meal_menu,
		       :engine, _self,
		       :image, {:activate,:ui_resources},
		       :action_message, :activate_meal_menu|()| ) )
_endmethod
$
# Define plugin properties
_pragma(classify_level=debug, topic={application_development_examples})
## X offset used for dialog activation
meal_menu_plugin.def_property( :x_offset,
			       :type, :integer, :default_value, 0,
			       :description, "X offset used for dialog activation" )
$
_pragma(classify_level=debug, topic={application_development_examples})
## Y offset used for dialog activation
meal_menu_plugin.def_property( :y_offset,
			       :type, :integer, :default_value, 0,
			       :description, "Y offset used for dialog activation" )
$
_pragma(classify_level=debug, topic={application_development_examples})
## Method for the plugin to activate the dialog box
## A new dialog box is created only if one is not
## already cached 
_method meal_menu_plugin.activate_meal_menu()
    name << :meal_menu
    _if (d << _self.get_dialog( name ) ) _is _unset
    _then
	# Create and cache the dialog
	d << meal_menu.new_dialog( _self.top_frame )
	_self.cache_dialog( name, d )		
    _endif
    d.activate_relative_to( _self.message(:frame_title), _self.top_frame,
			    _self.x_offset, _self.y_offset )
    >> d
_endmethod
$
_pragma(classify_level=debug, topic={application_development_examples})
## Method for the plugin to embed the dialog box
## in a supplied container
_method meal_menu_plugin.build_gui(container)
    d << meal_menu.new()
    gui << d.build_embedded_gui(container)
    #   gui << d.build_gui(container)
    gui.tab_label << _self.message(:tab_title)
    >> gui
_endmethod

